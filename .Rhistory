hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time
t1<-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())->t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")->t4
t4
clas(t4)
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plat(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col =1)
plot(cars,col =2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
data(mtcars)
?boxpolot
?boxpolt
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
quit
library(devtools)
install_github("jennybc/gapminder")
library(devtools)
install_github("jennybc/gapminder")
install.packages(c("boot", "codetools", "foreign", "manipulate", "MASS", "Matrix", "mgcv", "nlme"))
library(devtools)
install_github("jennybc/gapminder")
install.package("devtools")
install.packages("devtools")
library(devtools)
install_github("jennybc/gapminder")
library(gapminder)
data(gapminder)
head(gapminder)
x<-subset(gapminder, gapminder$year ==1952)
mean(x$lifeExp <= 40)
mean(x$lifeExp <= 60) - mean(x$lifeExp <= 40)
prop = function(q) {
mean(x$lifeExp <= q)
}
prop(40)
qs = seq(from=min(x$lifeExp), to=max(x$lifeExp), length=20)
qs
props = sapply(qs, prop)
plot(qs, props)
props = sapply(qs, function(q) mean(x$lifeExp <= q))
plot(ecdf(x$lifeExp))
x<-subset(gapminder,gapminder$year==1952)
log10x<-log10(x$pop)
hist(log10x)
sd(log10x)
z<-(log10x-mean(log10x)/sd(log10x))
plot(z, qqnorm(log10x))
length(qqnorm(log10x))
log10x
tail(sort(z),1)
length(z)
tail(sort(z),142)
meanl<-mean(log10x)
meanl
sd(log10x)->sdl
z<-(log10x-meanl)/sdl
z
plot(z, qqnorm(log10x))
tail(sort(z),142)
F = function(q) pnorm(q, mean=meanl, sd=sdl)
F(6)
n = length(log10x)
F(7)*n -F(6)*n
head(pnorm(log10x, mean=meanl, sd=sdl))
mean(z)
sd(z)
qs = (1:n - 0.5)/n
qnorm(qs)
qs
sort (qs)
sort(qnorm(qs))
m<-matrix(0,0.5,1,0.5,0,0,11.,0,0,1,1, nroww=4)
m<-matrix(0,0.5,1,0.5,0,0,1,0.5,0,0,1,1, nroww=4)
m<-matrix(c(0,0.5,1,0.5,0,0,1,0.5,0,0,1,1), nroww=4)
m<-matrix(c(0,0.5,0.5,1,0.5,0,0,1,1,0,0,0,1,1), nroww=4)
m<-matrix(c(0,0.5,0.5,1,0.5,0,0,1,1,0,0,0,1,1), nrow=4)
m<-matrix(c(0,0.5,0.5,1,0,0,1,1,0,0,1,1), nrow=4)
m
eigen(m, symetric=FALSE)
eigen(m, symmetric=FALSE)
solve(m)
m<-matrix(c(0,0.5,0.5,0,0,1,0,0,1), nrow=3)
m
solve(m)
eigen(m, symmetric=FALSE)
solve(m)
a<-matrix(c(sec(1/3, lentgh.out=12)))
a<-matrix(c(seq(1/3, lentgh.out=12)))
a<-matrix(c(rep(1/3, times=12)))
a
a<-matrix(c(rep(1/3, times=12)), nrows=3)
a<-matrix(c(rep(1/3, times=12)), nrow=3)
a
m
a<-matrix(c(rep(1/3, times=9)), nrow=3).
a<-matrix(c(rep(1/3, times=9)), nrow=3)
a
m2<-m*0.7
a2<-a*0.3
m3<-m2+a2
m3
solve(m3)
eigen(m3)
eigen(m, symmetric=FALSE)
b<- matrix(c(rep(1/3,times=3)))
b
solve(m3, b)
b<- matrix(c(rep(1,times=3)))
solve(m3, b)
eigen(m3, b)
eigen(m3)
eigen(m3, b)
m<-matrix(c(0,0.5,0.5,0,0,1,1,0,0), nrow=3)
m2<-m*0.85
a2<-a*0.15
m3<-m2+a2
m3
x<-(2600/3911)
y<-(1140/3911)
z<-(171/3911)
0.85x = z + 0.15y
0.85*x = z + 0.15*y
0.85*x == z + 0.15*y
0.85*z == y + 0.575*x
x == 0.9*c + 0.05*b
x == 0.9*z + 0.05*y
0.95*z == 0.9*y + 0.475*x
m<-matrix(c(0,0.5,0.5,0,0,1,1,0,0), nrows=3)
m<-matrix(c(0,0.5,0.5,0,0,1,1,0,0), nrow=3)
m
r<-matrix(c(rep=1, times=3))
r
r<-matrix(c(rep(1, times=3))
)
r
r1<-m %*% r
r
r2<-m %*% r1
r3<-m %*% r2
r4<-m %*% r3
r5<-m %*% r4
r5
r4
for(i in 1:100){
x<-m %*% x
}
x<-r
for(i in 1:100){
x<-m %*% x
}
x
for(i in 1:10000){
x<-m %*% x
}
x
e<-2.718
e^(-0.003*40)->a
e^(-0.003*b)->b
e^(-0.003*35)->b
b-a
e^0.64
e^0.64+0.44
-2.44+0.64->x
e^x->y
y+1
y
x/(1+x)
-2.44+0.64->x
(e^x)/(1+(e^x))
-0.03->x
(e^x)/(1+(e^x))
-0.3->x
(e^x)/(1+(e^x))
-1.05->x
(e^x)/(1+(e^x))
x<-0.17+1.1
e<-2.714
(e^x)/(1+(e^x))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages(ggplot2)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)+ stats_smooth("loess")
qplot(Wind, Ozone, data = airquality, panel = panel.loess)
qplot(Wind, Ozone, data = airquality, smooth = "loess")
qplot(Wind, Ozone, data = airquality) + geom_smooth()
0.6*0.8
0.8+0.6-0.6*0.8
a<-martix(c(1,2,3,4), nrow=2)
a
a<-martix(c(1,2,3,4), nrow=2)
a<-matrix(c(1,2,3,4), nrow=2)
a
unique(a)
z<- as.vector(unique(a))
z
z<- as.vector(unique(a[,1]))
z
y<- as.vector(a)
y
a<-matrix(c(1,2,3,1), nrow=2)
y<- as.vector(a)
z<- as.vector(unique(a[,1]))
table(y)
x<-table(y)
x[1,1]
x
x<- as.data.frame(table(y))
x
x<- tbl_df(as.data.frame(table(y)))
library(dplyr)
x<- tbl_df(as.data.frame(table(y)))
x
mutate(x, percentage=Freq/sum(Freq))
x<- as.matrix(c(300,1200,700,800),2,2)
chisq.test(x)
(2/9)/(1/3)
(2/9)/(2/3)
(2/15)/(1/3)
(2/15)/(2/3)
1/0.8
205227-205211
/205211
205227-205211->x
x/205211
1-((27-11)/205211)
((27-11)/205211)
0.25/0.25
x<-sample(1:10000000000, size =2)
var(x)
x<-sample(1:10000, size =2)
var(x)
y<-append(x, sample(1:10000, size =2))
var(y)<var(x)
var(y)
(3/10)/(1/3)
(3/10)/(1/3*1/2)
(3/10)/((1/3)*(1/2))
(3/15)/((1/3)*(1/2))
x<-0.5*(1/3)
0.3/x
x<-as.matrix(c(700,500,300,1500), ncol = 2)
x
x<-as.matrix(c(700,500,300,1500), ncols= 2)
x
x<-as.matrix(c(700,500,300,1500), rows= 2)
x
x<-as.matrix(c(700,500,300,1500), nrows= 2)
x<-as.matrix(c(700,500,300,1500), nrows= 2)
x
x<-matrix(c(700,500,300,1500), nrows= 2)
x<-matrix(c(700,500,300,1500), cols= 2)
x<-matrix(c(700,500,300,1500), ncols= 2)
x<-matrix(c(700,500,300,1500), nolls= 2)
x<-matrix(c(700,500,300,1500), colls= 2)
x<-matrix(c(700,500,300,1500), nrow= 2)
x
chi(x)
chisq.test(x)
((100^2)/400)+((300^2)/800)+((300^2)/600)+((300^2)/1200)
((300^2)/400)+((300^2)/800)+((300^2)/600)+((300^2)/1200)
a<-1000
b<-a
c<-10
((c/b)+(c/a))/2
a<-5000
b<-50000
c<-500
((c/b)+(c/a))/2
16/205211
abs(205227-101758)/205227
abs(205227-101758)/101758
16/205211
1-(16/205211)
1-(abs(205227-101758)/101758)
1-(abs(205227-101758)/205227)
1-(abs(205227-161563)/205227)
1-(abs(205227-161563)/161567)
1-(abs(205227-)/205227)
1-abs(161563/101758)
1-abs(205211/101758)
1-abs(101758/161563)
1-abs(101758/205211)
1-abs(101758/205227)
1-abs(101758/c(205227,205211,101758,161563,161576))
1-abs(c(205227,205211,101758,161563,161576)/101758)
1-(c(205227,205211,101758,161563,161576)/101758)
1-(101758/c(205227,205211,101758,161563,161576))
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
dates <- unique(activity$date)
steps_per_day <- as.numeric()
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
library(dplyr)
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
dates <- unique(activity$date)
steps_per_day <- as.numeric()
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
library(dplyr)
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
dates <- unique(activity$date)
steps_per_day <- as.numeric()
activity <- read.csv("activity.csv", na.strings="NA")
setwd("~/GitHub/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
dates <- unique(activity$date)
steps_per_day <- as.numeric()
steps <- filter(activity, date == dates[1])
total_steps <- sum(steps)
steps <- filter(activity, date == dates[1])
steps <- filter(activity, date == dates[1])
total_steps <- sum(steps$step)
class(activity$step)
steps_per_day <- as.integer()
steps <- filter(activity, date == dates[1])
total_steps <- sum(steps$step)
total_steps <- as.numeric(sum(steps$step))
steps$step
steps <- filter(activity, date == dates[1])
View(steps)
steps <- filter(activity, date == dates[2])
View(steps)
steps <- filter(activity, date == dates[1])
total_steps <- sum(steps$step)
total_steps <- as.numeric(sum(steps$step))
View(steps)
total_steps <- sum(step$steps)
rm(steps)
step <- filter(activity, date == dates[1])
total_steps <- sum(step$steps)
step <- filter(activity, date == dates[2])
total_steps <- sum(step$steps)
for (i in length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
step <- filter(activity, date == dates[1])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
step <- filter(activity, date == dates[2])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
rm(steps_per_day)
for (i in length(dates)){
step <- filter(activity, date == dates[i])
if(is.na(steps$step) == TRUE){
skip()
}
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
rm(total_steps)
for (i in length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
steps_per_day <- as.integer()
steps_per_day <- list()
for (i in length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
steps_per_day <- as.integer()
for (i in 1:length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
hist(steps_per_day)
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
steps_per_day <- as.integer()
dates <- unique(activity$dat
for (i in 1:length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
hist(steps_per_day, main="Distribution of steps per day", xlab="Steps per day")
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
steps_per_day <- as.integer()
dates <- unique(activity$date)
for (i in 1:length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
hist(steps_per_day, main="Distribution of steps per day", xlab="Steps per day")
activity <- read.csv("activity.csv", na.strings="NA")
activity <- tbl_df(activity)
mean_steps_per_day <- as.integer()
dates <- unique(activity$date)
for (i in 1:length(dates)){
step <- filter(activity, date == dates[i])
mean_steps <- mean(step$steps)
mean_steps_per_day <- append(mean_steps_per_day, mean_steps)
}
hist(steps_per_day, main="Distribution of  average steps per day",
xlab="Average steps per day")
hist(mean_steps_per_day, main="Distribution of  average steps per day",
xlab="Average steps per day")
steps_per_day <- as.integer()
dates <- unique(activity$date)
for (i in 1:length(dates)){
step <- filter(activity, date == dates[i])
total_steps <- sum(step$steps)
steps_per_day <- append(steps_per_day, total_steps)
}
hist(steps_per_day, main="Distribution of steps per day", xlab="Steps per day")
print("Average number of steps per day", mean(steps_per_day))
print("Median of steps per day", median(steps_per_day))
print("Average number of steps per day", mean(as.numeric(steps_per_day))
)
print("Average number of steps per day")
mean(steps_per_day)
mean(steps_per_day, na.rm=TRUE)
print("Average number of steps per day", mean(steps_per_day, na.rm=TRUE))
print("Median of steps per day", median(steps_per_day, na.rm=TRUE))
"Average number of steps per day", mean(steps_per_day, na.rm=TRUE)
mean_steps_per_day <- mean(steps_per_day, na.rm=TRUE)
print("Average number of steps per day", mean_steps_per_day)
print("Average number of steps per day" mean_steps_per_day)
print(list("Average number of steps per day", mean_steps_per_day))
print(c("Average number of steps per day", mean_steps_per_day))
load(swirl)
library(swirl)
swirl
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x<- 5+7
x
y<-x-3
y
c(1.1,9,3.14)
c(1.1,9,3.14)->z
?c
z
c(z,555,z)
z*2+100
my_sqryt<-sqrt(z-1)
my_sqrt<-sqrt(z-1)
